version: 1.0
name: General API Rules

rules:
  - name: Authentication
    description: All routes require authentication
    type: middleware
    implementation: auth

  - name: Error Handling
    description: Standard error responses
    responses:
      400:
        description: Bad Request
        schema:
          type: object
          properties:
            error:
              type: string
              description: Error message
      401:
        description: Unauthorized
      403:
        description: Forbidden
      404:
        description: Not Found
      500:
        description: Internal Server Error

  - name: Date Field Handling
    description: Standard handling of date fields in database operations
    implementation:
      validation:
        schema:
          date_fields:
            type: object
            properties:
              pattern:
                type: string
                description: "Regex pattern for ISO-8601 date strings"
                default: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$"
              validation:
                type: object
                properties:
                  zod_type:
                    type: string
                    description: "Zod validation type for date fields"
                    default: "z.union([z.string().datetime(), z.date()]).nullable().optional()"
              update_conversion:
                type: object
                properties:
                  pattern:
                    type: string
                    description: "Pattern for converting date fields in update operations"
                    default: "field: value ? new Date(value) : undefined"
      requirements:
        - date_validation:
            description: "All date fields must be validated using the standard date validation"
            properties:
              schema_definition:
                description: "Date fields must be defined in the Zod schema using the standard date validation"
                required: true
              update_handling:
                description: "Date fields must be properly converted in update operations"
                required: true
              null_handling:
                description: "Date fields must properly handle null values"
                required: true
        - date_types:
            description: "Supported date field types"
            properties:
              prisma_types:
                type: array
                items:
                  type: string
                default: ["DateTime", "Date", "Time"]
              zod_types:
                type: array
                items:
                  type: string
                default: ["string", "date"]

  - name: Pagination
    description: Standard pagination parameters
    parameters:
      - name: page
        in: query
        type: integer
        default: 1
        description: Page number
      - name: limit
        in: query
        type: integer
        default: 10
        description: Items per page

  - name: Sorting
    description: Standard sorting parameters
    parameters:
      - name: sort
        in: query
        type: string
        description: Field to sort by
      - name: order
        in: query
        type: string
        enum: [asc, desc]
        default: asc
        description: Sort order

  - name: Filtering
    description: Standard filtering parameters
    parameters:
      - name: filter
        in: query
        type: string
        description: Filter criteria in JSON format

  - name: Response Format
    description: Standard response format
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        meta:
          type: object
          properties:
            total:
              type: integer
            page:
              type: integer
            limit:
              type: integer
            pages:
              type: integer

  - name: REST Endpoint Patterns
    description: Standard REST endpoint patterns
    patterns:
      POST:
        description: Create new item
      GET:
        description: List all items or get single item
      PUT:
        description: Update item
      DELETE:
        description: Delete item

database_rules:
  name: "Database API Requirements"
  description: "General requirements for all database API endpoints"
  
  requirements:
    - test_implementation:
        description: "Each endpoint must have corresponding tests"
        properties:
          endpoint_path: "string"
          method: "string"
          test_suite: "string"
          ui_integration: "boolean"
          
    - documentation:
        description: "API endpoints must be documented"
        properties:
          endpoint: "string"
          method: "string"
          parameters: "object"
          response: "object"
          examples: "array"
          
    - error_handling:
        description: "Proper error handling must be implemented"
        properties:
          input_validation: "boolean"
          user_friendly_messages: "boolean"
          http_status_codes: "boolean"
          
    - security:
        description: "Security measures must be implemented"
        properties:
          authentication: "boolean"
          authorization: "boolean"
          input_sanitization: "boolean"
          
    - performance:
        description: "Performance considerations must be addressed"
        properties:
          pagination: "boolean"
          caching: "boolean"
          query_optimization: "boolean"

    - validation:
        description: "Data validation must be implemented using Zod"
        properties:
          schema_definition:
            description: "Zod schema must match Prisma model constraints"
            requirements:
              - field_types: "Must match Prisma field types"
              - field_lengths: "Must match VARCHAR/CHAR length constraints"
              - required_fields: "Must match Prisma @default and optional fields"
              - enums: "Must match Prisma enum values"
              - relations: "Must validate relation constraints"
              - date_fields: "Must use standard date field validation"
          validation_implementation:
            description: "Validation must be applied to all database operations"
            requirements:
              - create: "Validate on record creation"
              - update: "Validate on record updates"
              - delete: "Validate on record deletion"
              - query: "Validate query parameters"
              - safe_parse: "Must use safeParse instead of parse for better error handling"
              - error_logging: "Must log validation errors before returning 400 status"
              - db_error_logging: "Must log database errors before returning 500 status"
          error_messages:
            description: "Validation errors must be user-friendly"
            requirements:
              - field_specific: "Errors must reference specific fields"
              - constraint_specific: "Errors must explain violated constraints"
              - suggestion: "Errors should suggest valid values when possible" 