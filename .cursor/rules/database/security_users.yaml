version: 1.0
name: Security Users API

basePath: /api/security/users

routes:
  - name: List Users
    method: GET
    path: /
    description: Get a list of all security users
    parameters:
      - $ref: ../general.yaml#/rules/2/parameters
      - $ref: ../general.yaml#/rules/3/parameters
      - $ref: ../general.yaml#/rules/4/parameters
    responses:
      200:
        description: List of security users
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/definitions/SecurityUser'
            meta:
              $ref: ../general.yaml#/rules/5/schema/properties/meta

  - name: Get User
    method: GET
    path: /{id}
    description: Get a single security user by ID
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: User ID
    responses:
      200:
        description: User details
        schema:
          $ref: '#/definitions/SecurityUser'
      404:
        description: User not found

  - name: Create User
    method: POST
    path: /
    description: Create a new security user
    parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SecurityUserInput'
    responses:
      201:
        description: User created
        schema:
          $ref: '#/definitions/SecurityUser'
      400:
        description: Invalid input

  - name: Update User
    method: PUT
    path: /{id}
    description: Update an existing security user
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: User ID
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SecurityUserInput'
    responses:
      200:
        description: User updated
        schema:
          $ref: '#/definitions/SecurityUser'
      400:
        description: Invalid input
      404:
        description: User not found

  - name: Delete User
    method: DELETE
    path: /{id}
    description: Delete a security user
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: User ID
    responses:
      204:
        description: User deleted
      404:
        description: User not found

  - name: Get User Sites
    method: GET
    path: /{id}/sites
    description: Get all sites associated with a user
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: User ID
    responses:
      200:
        description: List of user sites
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/definitions/SecurityUserSite'
      404:
        description: User not found

definitions:
  SecurityUser:
    type: object
    properties:
      UserID:
        type: string
        description: Unique identifier
      UserName:
        type: string
        description: Username
      DisplayName:
        type: string
        description: Display name
      Email:
        type: string
        description: Email address
      RoleID:
        type: integer
        description: Security role ID
      GroupID:
        type: string
        description: Security group ID
      Status:
        type: string
        description: User status
      LastLogin:
        type: string
        format: date-time
        description: Last login timestamp
      Theme:
        type: string
        description: UI theme preference

  SecurityUserInput:
    type: object
    required:
      - UserName
      - DisplayName
      - Email
      - RoleID
    properties:
      UserName:
        type: string
        description: Username
      DisplayName:
        type: string
        description: Display name
      Email:
        type: string
        description: Email address
      RoleID:
        type: integer
        description: Security role ID
      GroupID:
        type: string
        description: Security group ID
      Status:
        type: string
        description: User status
      Theme:
        type: string
        description: UI theme preference

  SecurityUserSite:
    type: object
    properties:
      ID:
        type: integer
        description: Unique identifier
      UserID:
        type: string
        description: User ID
      SiteID:
        type: string
        description: Site ID
      IsContact:
        type: boolean
        description: Whether user is a contact for this site 