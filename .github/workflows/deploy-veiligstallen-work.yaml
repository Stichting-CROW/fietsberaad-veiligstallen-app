name: Deploy to Digital Ocean

on:
  push:
    branches:
      - veiligstallen-v2
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Create .env file
        env:
          NEXT_PUBLIC_API_BASE_URL: ${{ vars.DO_NEXT_PUBLIC_API_BASE_URL }}
          NEXT_PUBLIC_WEB_BASE_URL: ${{ vars.DO_NEXT_PUBLIC_WEB_BASE_URL }}
          DATABASE_URL: ${{ vars.DO_DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.DO_NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ vars.DO_NEXTAUTH_URL }}
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.DO_NEXT_PUBLIC_MAPBOX_TOKEN }}
          LOGINTOKEN_SIGNER_PRIVATE_KEY: ${{ secrets.DO_LOGINTOKEN_SIGNER_PRIVATE_KEY }}
        run: |
          touch .env
          echo "NEXT_PUBLIC_API_BASE_URL=$NEXT_PUBLIC_API_BASE_URL" >> .env
          echo "NEXT_PUBLIC_WEB_BASE_URL=$NEXT_PUBLIC_WEB_BASE_URL" >> .env
          echo "NODE_ENV=production" >> .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env
          echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env
          echo "NEXT_PUBLIC_MAPBOX_TOKEN=$NEXT_PUBLIC_MAPBOX_TOKEN" >> .env
          echo "LOGINTOKEN_SIGNER_PRIVATE_KEY=$LOGINTOKEN_SIGNER_PRIVATE_KEY" >> .env

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_HOST }}
          username: ${{ vars.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd /var/www/veiligstallen
            git pull origin veiligstallen-v2

            # Create docker-compose.yml if it doesn't exist
            cat > docker-compose.yml << 'EOL'
            version: "3"

            services:
              app:
                build: .
                restart: always
                ports:
                  - "3000:3000"
                environment:
                  - NODE_ENV=production
                env_file:
                  - .env
                extra_hosts:
                  - "host.docker.internal:host-gateway"
                network_mode: "host"
            EOL

            docker-compose build
            docker-compose down
            docker-compose up -d
